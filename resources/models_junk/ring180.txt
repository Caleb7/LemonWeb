# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 12/24/2018 @ 1952
# Holograms: 72
# Notes: 
# --------------------------------------------- #
@name ring180
@inputs 
@outputs 
@persist Hologram:table

##include "lib/dream"

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl")
    Hologram[ "position", array ] = array(vec(-101.8669,0,60.3604),vec(-101.4792,8.8783,60.3604),vec(-100.3192,17.689,60.3604),vec(-98.3959,26.3651,60.3604),vec(-95.7235,34.8405,60.3604),vec(-92.3228,43.0508,60.3604),vec(-88.2194,50.9335,60.3604),vec(-83.4445,58.4285,60.3604),vec(-78.0345,65.4787,60.3604),vec(-72.0308,72.0307,60.3896),vec(-65.4788,78.0345,60.3604),vec(-58.4283,83.4444,60.3604),vec(-50.9333,88.2193,60.3604),vec(-43.0508,92.3227,60.3604),vec(-34.8405,95.7235,60.3604),vec(-26.3651,98.3959,60.3604),vec(-17.689,100.3193,60.3604),vec(-8.8783,101.4792,60.3604),vec(0,101.8669,60.3604),vec(8.8783,101.4792,60.3604),vec(17.689,100.3193,60.3604),vec(26.3651,98.3959,60.3604),vec(34.8406,95.7236,60.3604),vec(43.0508,92.3227,60.3604),vec(50.9335,88.2193,60.3604),vec(58.4285,83.4445,60.3604),vec(65.4788,78.0346,60.3604),vec(72.0308,72.0308,60.3604),vec(78.0345,65.4787,60.3604),vec(83.4445,58.4284,60.3604),vec(88.2194,50.9334,60.3604),vec(92.3228,43.0508,60.3604),vec(95.7235,34.8405,60.3604),vec(98.3959,26.3651,60.3604),vec(100.3193,17.689,60.3604),vec(101.4792,8.8783,60.3604),vec(101.8669,0,60.3604),vec(101.4792,-8.8783,60.3604),vec(100.3192,-17.689,60.3604),vec(98.3959,-26.3651,60.3604),vec(95.7235,-34.8405,60.3604),vec(92.3228,-43.0508,60.3604),vec(88.2194,-50.9335,60.3604),vec(83.4445,-58.4285,60.3604),vec(78.0345,-65.4787,60.3604),vec(72.0308,-72.0307,60.3896),vec(65.4788,-78.0345,60.3604),vec(58.4283,-83.4444,60.3604),vec(50.9333,-88.2193,60.3604),vec(43.0508,-92.3227,60.3604),vec(34.8405,-95.7235,60.3604),vec(26.3651,-98.3959,60.3604),vec(17.689,-100.3193,60.3604),vec(8.8783,-101.4792,60.3604),vec(0,-101.8669,60.3604),vec(-8.8783,-101.4792,60.3604),vec(-17.689,-100.3193,60.3604),vec(-26.3651,-98.3959,60.3604),vec(-34.8406,-95.7236,60.3604),vec(-43.0508,-92.3227,60.3604),vec(-50.9335,-88.2193,60.3604),vec(-58.4285,-83.4445,60.3604),vec(-65.4788,-78.0346,60.3604),vec(-72.0308,-72.0308,60.3604),vec(-78.0345,-65.4787,60.3604),vec(-83.4445,-58.4284,60.3604),vec(-88.2194,-50.9334,60.3604),vec(-92.3228,-43.0508,60.3604),vec(-95.7235,-34.8405,60.3604),vec(-98.3959,-26.3651,60.3604),vec(-100.3193,-17.689,60.3604),vec(-101.4792,-8.8783,60.3604))
    Hologram[ "angle", array ] = array(ang(69,0,0),ang(69,-5,0),ang(69,-10,0),ang(69,-15,0),ang(69,-20,0),ang(69,-25,0),ang(69,-30,0),ang(69,-35,0),ang(69,-40,0),ang(69,-45,0),ang(69,-50,0),ang(69,-55,0),ang(69,-60,0),ang(69,-65,0),ang(69,-70,0),ang(69,-75,0),ang(69,-80,0),ang(69,-85,0),ang(69,-90,0),ang(69,-95,0),ang(69,-100,0),ang(69,-105,0),ang(69,-110,0),ang(69,-115,0),ang(69,-120,0),ang(69,-125,0),ang(69,-130,0),ang(69,-135,0),ang(69,-140,0),ang(69,-145,0),ang(69,-150,0),ang(69,-155,0),ang(69,-160,0),ang(69,-165,0),ang(69,-170,0),ang(69,-175,0),ang(69,-180,0),ang(69,175,0),ang(69,170,0),ang(69,165,0),ang(69,160,0),ang(69,155,0),ang(69,150,0),ang(69,145,0),ang(69,140,0),ang(69,135,0),ang(69,130,0),ang(69,125,0),ang(69,120,0),ang(69,115,0),ang(69,110,0),ang(69,105,0),ang(69,100,0),ang(69,95,0),ang(69,90,0),ang(69,85,0),ang(69,80,0),ang(69,75,0),ang(69,70,0),ang(69,65,0),ang(69,60,0),ang(69,55,0),ang(69,50,0),ang(69,45,0),ang(69,40,0),ang(69,35,0),ang(69,30,0),ang(69,25,0),ang(69,20,0),ang(69,15,0),ang(69,10,0),ang(69,5,0))
    Hologram[ "scale", array ] = array(vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9),vec(0.2,0.2,0.9))
    Hologram[ "color", array ] = array(vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255))
    Hologram[ "alpha", array ] = array(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255)
    Hologram[ "material", array ] = array("","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","")
    Hologram[ "skin", array ] = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Hologram[ "parent", array ] = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Hologram[ "note", array ] = array("","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next + 1 ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            Hologram[ "next", number ] = I
        }
        if( Next <= Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 )
        } else {
            for( I = 1, Hologram[ "model", array ]:count( ) ) {holoParent(I, Hologram["parent", array][I, number]) }
            interval( 100 ) }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 120 )
    for( I = 1, 72 ) { holoColor( I, hsv2rgb( vec( ( realtime( ) * 200 ) + ( ( 360 / 72 ) * I ), 1, 1 ) ) ) }
}





