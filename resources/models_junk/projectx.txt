# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 12/25/2018 @ 358
# Holograms: 22
# Notes: 
# --------------------------------------------- #
@name projectx
@inputs 
@outputs 
@persist Hologram:table

##include "lib/dream"

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/holograms/cube.mdl","models/sprops/misc/tubes/size_5/tube_96x6.mdl","models/sprops/misc/tubes/size_5/tube_96x6.mdl","models/props_phx/gears/bevel9.mdl","models/props_phx/gears/bevel9.mdl","models/holograms/hq_cylinder.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl")
    Hologram[ "position", array ] = array(vec(0,0,22.0811),vec(0,0,22.0811),vec(0,0,22.0811),vec(0,0,40.4824),vec(0,0,2.4795),vec(0,0,22.0811),vec(40.292,-0.8008,30.1318),vec(-40.2422,0.8008,30.1318),vec(0.8008,40.292,30.1318),vec(-0.8008,-40.292,30.1318),vec(-27.9248,29.0566,30.1318),vec(27.8896,-29.0225,30.1318),vec(-29.0566,-27.9238,30.1318),vec(29.0566,27.9238,30.1318),vec(16.1582,36.918,30.1318),vec(-16.1582,-36.918,30.1318),vec(36.873,-16.1396,30.1318),vec(-36.9189,16.1592,30.1318),vec(14.6797,-37.5312,30.1318),vec(-14.6797,37.5313,30.1318),vec(-37.4854,-14.6602,30.1318),vec(37.5313,14.6797,30.1318))
    Hologram[ "angle", array ] = array(ang(0,0,0),ang(0,90,90),ang(0,90,90),ang(0,-180,-180),ang(0,0,0),ang(0,-180,-180),ang(-75,-0.0004,-89.9996),ang(-75,-180,-90),ang(-75,90,-90),ang(-75,-90,-90),ang(-75,135,-89.9999),ang(-75,-45,-90),ang(-75,-135,-90),ang(-74.9999,45.0003,-90.0004),ang(-74.9999,67.4999,-89.9998),ang(-75,-112.5003,-89.9997),ang(-74.9999,-22.5002,-89.9998),ang(-74.9999,157.4998,-89.9997),ang(-74.9999,-67.5002,-89.9998),ang(-74.9999,112.4998,-89.9997),ang(-75,-157.5002,-89.9998),ang(-75,22.4998,-89.9998))
    Hologram[ "scale", array ] = array(vec(1,1,1),vec(1,1,1),vec(0.7,1,0.7),vec(4.4,4.4,4.4),vec(4.4,4.4,4.4),vec(5.55,5.55,1),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35))
    Hologram[ "color", array ] = array(vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(90,90,90),vec(90,90,90),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0))
    Hologram[ "alpha", array ] = array(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255)
    Hologram[ "material", array ] = array("WTP/carbonfibre_2","WTP/carbonfibre_2","WTP/carbonfibre_2","WTP/carbonfibre_2","WTP/carbonfibre_2","WTP/carbonfibre_2","","","","","","","","","","","","","","","","")
    Hologram[ "skin", array ] = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Hologram[ "parent", array ] = array(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
    Hologram[ "note", array ] = array("","","","","","","","","","","","","","","","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next + 1 ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            Hologram[ "next", number ] = I
        }
        if( Next <= Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 )
        } else {
            for( I = 1, Hologram[ "model", array ]:count( ) ) {holoParent(I, Hologram["parent", array][I, number]) }
            interval( 100 ) }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 60 )

}





