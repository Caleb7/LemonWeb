@name jeff
@inputs
@outputs
@persist [HologramName HologramModel HologramPosition HologramPositionWorld HologramSkin HologramAngle HologramScale HologramColor HologramAlpha HologramMaterial HologramParent]:array
@persist [HoloCounter Loaded]:number [Origin]:vector [Me Chip]:entity
@persist
@trigger

interval(25)

if( first() | dupefinished() )
{
    Me = owner()
    Chip = entity()
    Origin = Chip:pos()
    Loaded = 0

    # DO NOT EDIT THIS SECTION UNLESS YOU KNOW WHAT YOU ARE DOING, OR IT MAY NOT PARSE IN MODELER CORRECTLY!
    HoloCounter = 0
    HologramModel = array("models/sprops/trans/air/prop_3b_l.mdl","models/holograms/cube.mdl","models/holograms/cylinder.mdl","models/holograms/cylinder.mdl","models/holograms/cylinder.mdl","models/holograms/cylinder.mdl","models/holograms/cylinder.mdl","models/holograms/cylinder.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/mechanics/roboticslarge/g1.mdl","models/mechanics/roboticslarge/g1.mdl","models/mechanics/roboticslarge/g1.mdl","models/mechanics/roboticslarge/g1.mdl","models/mechanics/roboticslarge/g1.mdl","models/mechanics/roboticslarge/g1.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_sphere.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/sprops/trans/exhaust/tip_1.mdl","models/sprops/trans/exhaust/tip_1.mdl","models/items/combine_rifle_ammo01.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_sphere.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl","models/items/combine_rifle_ammo01.mdl")
    HologramPosition = array(vec(-2.5,-0.5,95.1001),vec(0,0,25),vec(23,-23,6),vec(23,23,6),vec(-23,-23,6),vec(-23,23,6),vec(0,-23,18),vec(0,23,18),vec(14.5,23,17.25),vec(-14.5,23,17.25),vec(-14.5,-23,17.25),vec(14.5,-23,17.25),vec(0,-23,0),vec(0,23,0),vec(0,23,23.5),vec(0,-23,23.5),vec(25,23,12),vec(25,-23,12),vec(-25,23,12),vec(-25,-23,12),vec(-25,-23,17),vec(-25,23,17),vec(25,23,17),vec(25,-23,17),vec(0,-22,55.0002),vec(0,22,55.0002),vec(0,-22,55.0002),vec(0,22,55.0002),vec(0,0,55.0002),vec(0,0,60.0002),vec(0,0,55.0002),vec(17,-22,55.0002),vec(17,22,55.0002),vec(0,0,60.0002),vec(0,0,65.0002),vec(-6.1997,0,65),vec(4,-22,55.0002),vec(4,22,55.0002),vec(0,0,31),vec(0,23,27),vec(0,-23,27),vec(-2,0,85.0002))
    HologramAngle = array(ang(90,0,0),ang(0,0,0),ang(90,90,0),ang(90,90,0),ang(90,90,0),ang(90,90,0),ang(90,90,0),ang(90,90,0),ang(28,0,0),ang(-28,0,0),ang(-28,0,0),ang(28,0,0),ang(0,0,0),ang(0,0,0),ang(0,-90,-90),ang(0,-90,-90),ang(0,-90,-110),ang(0,-90,-110),ang(0,-90,-70),ang(0,-90,-70),ang(70,40,0),ang(70,-40,0),ang(-70,40,0),ang(-70,-40,0),ang(0,0,0),ang(0,0,0),ang(0,-180,0),ang(0,-180,0),ang(0,0,90),ang(0,180,180),ang(0,0,-90),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,90,0),ang(90,0,0),ang(90,0,0),ang(0,180,180),ang(0,0,90),ang(0,0,-90),ang(0,0,0))
    HologramScale = array(vec(1,1,1),vec(1,1,1),vec(1,1,0.75),vec(1,1,0.75),vec(1,1,0.75),vec(1,1,0.75),vec(1,1,0.75),vec(1,1,0.75),vec(2.2,0.75,0.01),vec(2.2,0.75,0.01),vec(2.2,0.75,0.01),vec(2.2,0.75,0.01),vec(3.8,0.75,0.01),vec(3.8,0.75,0.01),vec(0.1525,0.25,0.25),vec(0.1525,0.25,0.25),vec(0.1525,0.25,0.25),vec(0.1525,0.25,0.25),vec(0.1525,0.25,0.25),vec(0.1525,0.25,0.25),vec(1,2,1),vec(1,2,1),vec(1,2,1),vec(1,2,1),vec(0.75,0.75,0.75),vec(0.75,0.75,0.75),vec(0.1,0.1,0.1),vec(0.1,0.1,0.1),vec(1,2.5,1),vec(5,2.5,5),vec(1,2.5,1),vec(5,1.5,1.5),vec(5,1.5,1.5),vec(4,0.75,4),vec(2,2,0.5),vec(1.5,1,0.15),vec(1.2,2.3,1.2),vec(1.2,2.3,1.2),vec(4,1.5,4),vec(1,2,1),vec(1,2,1),vec(1,1,1))
    HologramColor = array(vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(255,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255))
    HologramAlpha = array(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255)
    HologramMaterial = array("","Models/Combine_Turrets/ground_turret/ground_turret01","","","","","","","","","","","","","Models/Combine_Turrets/ground_turret/ground_turret01","Models/Combine_Turrets/ground_turret/ground_turret01","Models/Combine_Turrets/ground_turret/ground_turret01","Models/Combine_Turrets/ground_turret/ground_turret01","Models/Combine_Turrets/ground_turret/ground_turret01","Models/Combine_Turrets/ground_turret/ground_turret01","","","","","Models/Combine_Turrets/ground_turret/ground_turret01","Models/Combine_Turrets/ground_turret/ground_turret01","","","Models/Combine_Turrets/ground_turret/ground_turret01","Models/Combine_Turrets/ground_turret/ground_turret01","Models/Combine_Turrets/ground_turret/ground_turret01","","","","","","","","","","","")
    HologramSkin = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    HologramParent = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    timer("createHolos", 1)
    # DO NOT EDIT THIS SECTION UNLESS YOU KNOW WHAT YOU ARE DOING, OR IT MAY NOT PARSE IN MODELER CORRECTLY!

}
elseif( clk("createHolos") )
{
    while(perf(90) & HoloCounter < HologramModel:count() & holoCanCreate())
    {
        HoloCounter++
        holoCreate( HoloCounter )
        holoPos(HoloCounter, Origin + HologramPosition[HoloCounter, vector])
        holoScale(HoloCounter, HologramScale[HoloCounter, vector])
        holoAng(HoloCounter, HologramAngle[HoloCounter, angle])
        holoColor(HoloCounter, HologramColor[HoloCounter, vector])
        holoModel( HoloCounter, HologramModel[HoloCounter, string] )
        holoMaterial( HoloCounter, HologramMaterial[HoloCounter, string] )
        holoSkin( HoloCounter, HologramSkin[HoloCounter, number] )
        holoAlpha( HoloCounter, HologramAlpha[HoloCounter, number] )
    }
    if(HoloCounter < HologramModel:count()) { timer("createHolos", 1) }
    else { timer("parentHolos", 1) HoloCounter = 0 }
}
elseif( clk("parentHolos") )
{
    while(perf(90) & HoloCounter < HologramModel:count())
    {
        HoloCounter++
        if(HologramParent[HoloCounter, number] > 0)
        {
            holoParent(HoloCounter, HologramParent[HoloCounter, number])
        }
    }
    if(HoloCounter == HologramModel:count()) { Loaded = 1 }
    else { timer("parentHolos", 1) }
}
elseif( clk() & Loaded == 1)
{
    
}
