# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 12/20/2018 @ 1621
# Holograms: 18
# Notes: 
# --------------------------------------------- #
@name pad16
@inputs 
@outputs 
@persist Hologram:table

##include "lib/dream"

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/holograms/plane.mdl","models/led.mdl")
    Hologram[ "position", array ] = array(vec(0,-1.3516,52.6816),vec(-0.1,-9.0029,45.0244),vec(-0.1,-3.8989,45.0244),vec(-0.1,1.2007,45.0244),vec(-0.1,6.3003,45.0244),vec(-0.1,-9.0029,50.124),vec(-0.1,-9.0029,55.2236),vec(-0.1,-9.0029,60.3232),vec(-0.1,-3.8989,50.124),vec(-0.1,-3.8989,55.2236),vec(-0.1,-3.8989,60.3232),vec(-0.1,1.2007,50.124),vec(-0.1,1.2007,55.2236),vec(-0.1,1.2007,60.3232),vec(-0.1,6.3003,50.124),vec(-0.1,6.3003,55.2236),vec(-0.1,6.3003,60.3232),vec(-0.1,6.3003,45.0244))
    Hologram[ "angle", array ] = array(ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(90,180,0),ang(-90,0,0))
    Hologram[ "scale", array ] = array(vec(1.7167,1.7167,0.0833),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(0.4167,0.4167,0.4167),vec(1,1,0.1))
    Hologram[ "color", array ] = array(vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0))
    Hologram[ "alpha", array ] = array(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255)
    Hologram[ "material", array ] = array("","models/cheeze/buttons2/minus.mdl","models/cheeze/buttons2/equals.mdl","models/cheeze/buttons2/0.mdl","","models/cheeze/buttons2/plus.mdl","models/cheeze/buttons2/divide.mdl","models/cheeze/buttons2/multiply.mdl","models/cheeze/buttons2/3.mdl","models/cheeze/buttons2/6.mdl","models/cheeze/buttons2/9.mdl","models/cheeze/buttons2/2.mdl","models/cheeze/buttons2/5.mdl","models/cheeze/buttons2/8.mdl","models/cheeze/buttons2/1.mdl","models/cheeze/buttons2/4.mdl","models/cheeze/buttons2/7.mdl","debug/debugdrawflat")
    Hologram[ "skin", array ] = array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
    Hologram[ "parent", array ] = array(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
    Hologram[ "note", array ] = array("","","","","","","","","","","","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            Hologram[ "next", number ] = I
        }
        if( Next < Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 )
        } else { for( I = 1, Hologram[ "model", array ]:count( ) ) { holoParent(I, Hologram["parent", array][I, number]) }, interval( 100 ) }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 60 )

}





