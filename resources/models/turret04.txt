# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 12/20/2018 @ 1625
# Holograms: 32
# Notes: 
# --------------------------------------------- #
@name turret04
@persist Hologram:table

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/cube.mdl","models/holograms/hq_dome.mdl","models/holograms/hq_dome.mdl","models/holograms/hq_torus_thick.mdl","models/holograms/hq_torus_thick.mdl","models/sprops/misc/tubes/size_5/tube_96x6.mdl","models/sprops/misc/tubes/size_5/tube_96x6.mdl","models/props_phx/gears/bevel9.mdl","models/props_phx/gears/bevel9.mdl","models/holograms/hq_cylinder.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl","models/mechanics/robotics/claw.mdl")
    Hologram[ "position", array ] = array(vec(0,0,0),vec(0,0,5),vec(0,0,60),vec(0,47.8975,60.1084),vec(0,-47.7969,60.1084),vec(0,48.7441,60.1084),vec(0,-48.7979,60.1084),vec(0,0,60),vec(0,0,60),vec(-18.4009,0,60),vec(19.6011,0,60),vec(0,0,60),vec(-6.1006,-49.2979,36.2852),vec(6.1001,-49.2998,36.2998),vec(-6.1001,49.2998,36.2998),vec(6.1006,49.2979,36.2852),vec(-8.0508,-0.8008,100.292),vec(-8.0508,0.8008,19.7578),vec(-8.0508,40.292,60.8008),vec(-8.0508,-40.292,59.1992),vec(-8.0508,29.0566,32.0752),vec(-8.0508,-29.0225,87.8896),vec(-8.0508,-27.9238,30.9434),vec(-8.0508,27.9238,89.0566),vec(-8.0508,36.918,76.1582),vec(-8.0508,-36.918,43.8418),vec(-8.0508,-16.1396,96.873),vec(-8.0508,16.1592,23.0811),vec(-8.0508,-37.5312,74.6797),vec(-8.0508,37.5313,45.3203),vec(-8.0508,-14.6602,22.5146),vec(-8.0508,14.6797,97.5313))
    Hologram[ "angle", array ] = array(ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(90,90,0),ang(90,-90,0),ang(90,90,0),ang(89.9999,90,0),ang(0,90,0),ang(0,90,0),ang(90,0,0),ang(-90,0,0),ang(90,0,0),ang(15,0,0),ang(-15,0,0),ang(15,0,0),ang(-15,0,0),ang(-15,-179.9999,90),ang(15,180,-90),ang(0,165,-180),ang(0,-165,0),ang(10.5453,169.2714,-135.9929),ang(-10.5453,-169.2714,44.007),ang(10.5453,-169.2714,-44.007),ang(-10.5453,169.2713,135.9929),ang(-5.6843,166.0957,158.1937),ang(5.6843,-166.0958,-21.8063),ang(-13.8345,-174.1453,66.7891),ang(13.8345,174.1453,-113.2108),ang(-5.6842,-166.0957,21.8063),ang(5.6842,166.0957,-158.1936),ang(13.8345,-174.1454,-66.7891),ang(-13.8345,174.1454,113.2109))
    Hologram[ "scale", array ] = array(vec(10,10,1),vec(9,9,1),vec(1,1,1),vec(1,1,1),vec(1,1,1),vec(1.5,1.5,1),vec(1.5,1.5,1),vec(1,1,1),vec(0.7,1,0.7),vec(4.4,4.4,4.4),vec(4.4,4.4,4.4),vec(5.55,5.55,1),vec(1,0.1,5),vec(1,0.1,5),vec(1,0.1,5),vec(1,0.1,5),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35),vec(0.35,0.35,0.35))
    Hologram[ "color", array ] = array(vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0))
    Hologram[ "alpha", array ] = array(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255)
    Hologram[ "material", array ] = array("","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","")
    Hologram[ "parent", array ] = array(1,1,1,2,2,2,2,3,3,3,3,3,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
    Hologram[ "note", array ] = array("","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            Hologram[ "next", number ] = I
        }
        if( Next < Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 )
        } else { for( I = 1, Hologram[ "model", array ]:count( ) ) { holoParent(I, Hologram["parent", array][I, number]) }, interval( 100 ) }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 60 )

}





