# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 12/20/2018 @ 1625
# Holograms: 21
# Notes: 
# 1 -> anchor
# 6 -> pivot
# 7 ->  yaw only
# 9 -> pivot
# 10 ->  pitch and yaw
# --------------------------------------------- #
@name turret05
@persist Hologram:table

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/holograms/hq_cylinder.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl","models/holograms/hq_tube_thick.mdl","models/holograms/cube.mdl","models/props_combine/breenlight.mdl","models/holograms/hq_cylinder.mdl","models/holograms/rcube_thick.mdl","models/holograms/hq_tube_thin.mdl","models/holograms/hq_tube.mdl","models/holograms/cube.mdl","models/mechanics/roboticslarge/xfoot.mdl","models/mechanics/roboticslarge/xfoot.mdl","models/mechanics/roboticslarge/xfoot.mdl","models/mechanics/roboticslarge/xfoot.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl")
    Hologram[ "position", array ] = array(vec(0,0,24.2354),vec(27.6016,-27.8018,25.9932),vec(27.6016,27.8018,25.9932),vec(-27.6021,-27.8018,25.9932),vec(-27.6021,27.8018,25.9932),vec(0,0,27.1875),vec(0,0,32.7158),vec(0,0,32.7158),vec(0,0,39.9629),vec(0,0,32.7158),vec(-30.0425,0,47.0596),vec(11.0972,0,52.7373),vec(46.7959,0,52.7373),vec(27.6016,-27.8018,25.9932),vec(44,-44,22.3955),vec(-44,-44,22.3955),vec(44,44,22.3955),vec(-44,44,22.3955),vec(-27.6021,-27.8018,25.9932),vec(-27.6021,27.8018,25.9932),vec(27.6016,27.8018,25.9932))
    Hologram[ "angle", array ] = array(ang(0,0,0),ang(0,45,0),ang(0,-45,0),ang(0,-45,0),ang(0,-135,0),ang(0,0,0),ang(90,90,0),ang(0,0,0),ang(90,180,0),ang(90,90,0),ang(0,0,0),ang(90,0,0),ang(90,0,0),ang(90,45,0),ang(0,-45,0),ang(0,-130,0),ang(0,50,0),ang(0,130,0),ang(90,-45,0),ang(90,45,0),ang(90,-45,0))
    Hologram[ "scale", array ] = array(vec(3,3,0.5),vec(0.5,4,0.2),vec(0.5,4,0.2),vec(0.5,4,0.2),vec(0.5,4,0.2),vec(2.5,2.5,0.1),vec(1,1,1),vec(0.1,0.1,0.1),vec(2,4,4),vec(0.5,0.5,1),vec(2,2,2.5),vec(0.7,0.7,7),vec(0.87,0.87,1),vec(0.5,4,0.2),vec(0.3,0.3,0.3),vec(0.3,0.3,0.3),vec(0.3,0.3,0.3),vec(0.3,0.3,0.3),vec(0.5,4,0.2),vec(0.5,4,0.2),vec(0.5,4,0.2))
    Hologram[ "color", array ] = array(vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(100,100,100),vec(90,90,90),vec(110,110,110),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90),vec(90,90,90))
    Hologram[ "alpha", array ] = array(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255)
    Hologram[ "material", array ] = array("","","","","","","","","","","","","","","","","","","","","")
    Hologram[ "parent", array ] = array(1,1,1,1,1,1,6,6,8,8,8,8,8,1,1,1,1,1,1,1,1)
    Hologram[ "note", array ] = array("anchor","","","","","pivot"," yaw only","","pivot"," pitch and yaw","","","","","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            Hologram[ "next", number ] = I
        }
        if( Next < Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 )
        } else { for( I = 1, Hologram[ "model", array ]:count( ) ) { holoParent(I, Hologram["parent", array][I, number]) }, interval( 100 ) }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 60 )

}





