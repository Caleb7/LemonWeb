# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 12/20/2018 @ 1620
# Holograms: 8
# Notes: 
# --------------------------------------------- #
@name missile01
@persist Hologram:table

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/holograms/hq_cylinder.mdl","models/holograms/hq_sphere.mdl","models/holograms/prism.mdl","models/holograms/prism.mdl","models/holograms/prism.mdl","models/holograms/prism.mdl","models/holograms/cube.mdl","models/holograms/hq_cylinder.mdl")
    Hologram[ "position", array ] = array(vec(0,0,25.4248),vec(0,0,37.375),vec(-0.8691,0,15.584),vec(0.875,0,15.585),vec(0,0.8691,15.584),vec(0,-0.875,15.585),vec(0,0,25.4248),vec(0,0,37.9531))
    Hologram[ "angle", array ] = array(ang(0,0,0),ang(-90,0,0),ang(0,90,-65),ang(0,90,65),ang(0,0,-65),ang(0,0,65),ang(0,0,0),ang(0,0,0))
    Hologram[ "scale", array ] = array(vec(0.2,0.2,2),vec(0.2,0.2,0.2),vec(0.05,0.3,0.2),vec(0.05,0.3,0.2),vec(0.05,0.3,0.2),vec(0.05,0.3,0.2),vec(0.1,0.1,0.1),vec(0.01,0.01,0.2))
    Hologram[ "color", array ] = array(vec(50,50,50),vec(50,50,50),vec(70,70,70),vec(70,70,70),vec(70,70,70),vec(70,70,70),vec(255,255,255),vec(50,50,50))
    Hologram[ "alpha", array ] = array(255,255,255,255,255,255,255,255)
    Hologram[ "material", array ] = array("","","","","","","","")
    Hologram[ "parent", array ] = array(7,1,1,1,1,1,7,1)
    Hologram[ "note", array ] = array("","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            Hologram[ "next", number ] = I
        }
        if( Next < Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 )
        } else { for( I = 1, Hologram[ "model", array ]:count( ) ) { holoParent(I, Hologram["parent", array][I, number]) }, interval( 100 ) }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 60 )

}





