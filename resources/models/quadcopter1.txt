# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 1/21/2019 @ 1827
# Holograms: 15
# Notes: 
# --------------------------------------------- #
@name quadcopter1
@persist Hologram:table

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/cube.mdl","models/holograms/hq_torus_thin.mdl","models/holograms/hq_torus_thin.mdl","models/holograms/hq_torus_thin.mdl","models/holograms/hq_torus_thin.mdl","models/holograms/cylinder.mdl","models/holograms/cylinder.mdl","models/holograms/cylinder.mdl","models/holograms/cylinder.mdl","models/sprops/trans/air/prop_2b_l.mdl","models/sprops/trans/air/prop_2b_l.mdl","models/sprops/trans/air/prop_2b_l.mdl","models/sprops/trans/air/prop_2b_l.mdl")
    Hologram[ "position", array ] = array(vec(0,0,40),vec(0,0,40),vec(0,0,40),vec(4.2,-4.1599,40.9297),vec(-4.2,-4.1599,40.9297),vec(4.2,4.1599,40.9297),vec(-4.2,4.1599,40.9297),vec(4.2,-4.1599,40.5303),vec(-4.2,-4.1599,40.5303),vec(4.2,4.1599,40.5303),vec(-4.2,4.1599,40.5303),vec(-4.2,4.1599,40.9297),vec(4.2,4.1599,40.9297),vec(-4.2,-4.1599,40.9297),vec(4.2,-4.1599,40.9297))
    Hologram[ "angle", array ] = array(ang(0,0,0),ang(90,45,0),ang(90,135,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0),ang(90,0,0))
    Hologram[ "scale", array ] = array(vec(0.2,0.2,0.01),vec(0.01,0.01,1),vec(0.01,0.01,1),vec(0.58,0.58,0.58),vec(0.58,0.58,0.58),vec(0.58,0.58,0.58),vec(0.58,0.58,0.58),vec(0.02,0.02,0.1),vec(0.02,0.02,0.1),vec(0.02,0.02,0.1),vec(0.02,0.02,0.1),vec(0.05,0.05,0.05),vec(0.05,0.05,0.05),vec(0.05,0.05,0.05),vec(0.05,0.05,0.05))
    Hologram[ "color", array ] = array(vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255),vec(255,255,255))
    Hologram[ "alpha", array ] = array(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255)
    Hologram[ "material", array ] = array("","","","","","","","","","","","","","","")
    Hologram[ "parent", array ] = array(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
    Hologram[ "note", array ] = array("","","","","","","","","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next + 1 ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            holoParent(I, Hologram["parent", array][I, number])
            Hologram[ "next", number ] = I
        }
        if( Next <= Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 ) } else {
            interval( 100 )
        }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 60 )

}
