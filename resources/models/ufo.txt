# ----------------------------------------------------------------------------------------------------------------------------- #
# ____                                      __          __  __          ___                                                     #
#/\  _ `.                                  /\ \        /\ \/\ \        /\_ \                                                    #
#\ \ \/\ \  _ __    __     __      ___ ___ \ \/ ____   \ \ \_\ \    ___\//\ \     ___      __   _ __    __      ___ ___         #
# \ \ \ \ \/\`'__\/'__`\ /'__`\  /' __` __`\\/ /',__\   \ \  _  \  / __`\\ \ \   / __`\  /'_ `\/\`'__\/'__`\  /' __` __`\       #
#  \ \ \_\ \ \ \//\  __//\ \ \.\_/\ \/\ \/\ \ /\__, `\   \ \ \ \ \/\ \ \ \\_\ \_/\ \ \ \/\ \ \ \ \ \//\ \ \.\_/\ \/\ \/\ \      #
#   \ \____/\ \_\\ \____\ \__/.\_\ \_\ \_\ \_\\/\____/    \ \_\ \_\ \____//\____\ \____/\ \____ \ \_\\ \__/.\_\ \_\ \_\ \_\     #
#    \/___/  \/_/ \/____/\/__/\/_/\/_/\/_/\/_/ \/___/      \/_/\/_/\/___/ \/____/\/___/  \/___ \ \/_/ \/__/\/_/\/_/\/_/\/_/     #
#                                                                                          /\____/                              #
#                                                                                          \_/__/                               #
# ----------------------------------------------------------------------------------------------------------------------------- #
# Modeler Version: v5.1
# Date: 12/27/2018 @ 412
# Holograms: 17
# Notes: 
# 1 -> anchor
# --------------------------------------------- #
@name ufo
@persist Hologram:table

if( first( ) ) {

    Hologram = table()
    Hologram[ "model", array ] = array("models/holograms/hq_sphere.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_torus_thin.mdl","models/holograms/hq_torus_thin.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_torus_thin.mdl","models/holograms/hq_torus_thin.mdl","models/holograms/hq_torus_thin.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_sphere.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_torus.mdl","models/holograms/hq_torus.mdl")
    Hologram[ "position", array ] = array(vec(0,0,25),vec(0,0,25),vec(0,0,25),vec(0,0,25),vec(0,0,25),vec(0,0,25),vec(0,0,30.5996),vec(0,0,25),vec(0,0,29.501),vec(-23.1943,0,28.3994),vec(23.1943,0,28.4004),vec(0,-23.1943,28.3994),vec(0,23.1943,28.3994),vec(-23.1943,0,28.7998),vec(23.1943,0,28.7998),vec(0,-23.1943,28.7998),vec(0,23.1943,28.7998))
    Hologram[ "angle", array ] = array(ang(0,0,0),ang(0,0,0),ang(180,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(0,0,0),ang(-15,0,0),ang(15,0,0),ang(0,0,15),ang(0,0,-15),ang(-15,0,0),ang(15,0,0),ang(0,0,15),ang(0,0,-15))
    Hologram[ "scale", array ] = array(vec(5,5,1),vec(-5.1,-5.1,-1.1),vec(5.6,5.6,5.6),vec(-5.7,-5.7,-5.7),vec(2,2,2),vec(-2.1,-2.1,-2.1),vec(1.9,1.9,1.9),vec(5.3,5.3,1),vec(3,3,3),vec(0.4,0.4,0.1),vec(0.4,0.4,0.1),vec(0.4,0.4,0.1),vec(0.4,0.4,0.1),vec(0.4,0.4,0.1),vec(0.4,0.4,0.1),vec(0.4,0.4,0.1),vec(0.4,0.4,0.1))
    Hologram[ "color", array ] = array(vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(255,255,255),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(255,255,255),vec(40,40,40),vec(40,40,40),vec(40,40,40),vec(0,0,0),vec(0,0,0),vec(0,0,0),vec(0,0,0))
    Hologram[ "alpha", array ] = array(255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255)
    Hologram[ "material", array ] = array("","","","","sprops/textures/sprops_chrome","","","","","phoenix_storms/pack2/glass","phoenix_storms/pack2/glass","phoenix_storms/pack2/glass","phoenix_storms/pack2/glass","","","","")
    Hologram[ "parent", array ] = array(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
    Hologram[ "note", array ] = array("anchor","","","","","","","","","","","","","","","","")

    function buffer( ) {
        local Next = Hologram[ "next", number ]
        for( I = Next, Next + clamp( holoRemainingSpawns( ), 0, Hologram[ "model", array ]:count( ) - Next + 1 ) ) {
            holoCreate(
                I,
                entity():toWorld(Hologram["position", array][I, vector]),
                Hologram["scale", array][I, vector],
                entity():toWorld(Hologram["angle", array][I, angle]),
                vec4(Hologram["color", array][I, vector],
                Hologram["alpha", array ][I,number]),
                Hologram["model", array][I, string]
            )
            holoMaterial(I, Hologram["material", array][I, string])
            Hologram[ "next", number ] = I
        }
        if( Next <= Hologram[ "model", array ]:count( ) ) { timer( "buffer", 0.1 )
        } else {
            for( I = 1, Hologram[ "model", array ]:count( ) ) {holoParent(I, Hologram["parent", array][I, number]) }
            interval( 100 ) }
    } buffer( )
}

if( clk( "buffer" ) ) { buffer( ) } elseif( clk( ) ) {
    interval( 60 )

}





